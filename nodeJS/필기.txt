npm(Node Package Manager)
 전 세계의 개발자들이 만든 다양한기능 (패키지,모듈)관리
-npm 생태계..? 패키지를 검색해서 npm install 로 설치가능
(모듈,기능이라고도 한다.)

패키지 : 누군가 만들어놓은 기능 . 
별도의 가공처리를 거쳐 사용
학습어려움,구성 복잡 but 관리 효율 증가

ls
nvm --version

nvm --help


npm init -y : 폴더에 package.json 생성

npm install parcel-bundler -D
(module 설치 , 오타 주의 )
-내역확인 
npm i(install 약자) 패키지설치

package.json 관리

package-lock.json 은 자동으로 관리되는 파일


node_modules 폴더는 삭제가 되더라도, npm i 로 패키지 설치 가능



package.json -
scripts =     "test": "echo \"Error: no test specified\" && exit 1"
(삭제)
    "dev" : "parcel index.html" 추가
(프로젝트 내부에서만 실행 가능한)


npm run dev > "dev" 


terminal >>
Server running at http://localhost:1234 
1234  : 포트번호
라이브러리 접속 가능

import _ from 'lodash'
lodash 패키지를 main.js 로 가져오는 
from ~로부터 
_(변수)


console.log(_.carmelCase());
carmalCase 메소드 
사용예시 >
import _ from 'lodash'

console.log("HelloWorld");
console.log(_.camelCase("hello world"));


    "build":"parcel build index.html"
사용자가 보기 위한
terminal  - ctrl +c  개발용서버 종료 

npm run build
>dist 폴더 생성


dist폴더의 index.html 개발자가 보는용도가 아니다.
(압축버젼) 을 만들어주는 역할을 parcel bundler .
-D를 사용해서 개발의존성 사용
코드 난독화 는 작성된코드를 읽기 어렵게 만드는작업을 말함.
빌드된 결과(제품)는 브라우저에서 해석되는 용도,
용량을 축소하고 읽기 어렵게 만드는 등의 최적화를 거치는것이
좋다.

*번들(Bundle) : 프로젝트 개발에 사용한 여러 모듈(패키지)을
하나로 묶어내는 작업을 말한다.
기존의 main.js 가 아닌 특수문자들이 들어간 파일이 링크되있음.
웹브라우저 동작 개념

유의적버젼 : Semantic version (SemVer)
^Major.Minor.patch
^12.14.1 
Major : 기존 버전과 호환되지 않는 새로운 버젼
Minor : 기존 버전과 호환되는 새로운 기능이 추가되는 새로운 버젼
Patch : 기존버전과 호환되는 .버그 및 오타 수정
^(캐럿) : Major 버전 안에서 가장 최신버전으로 업데이트 가능


npm info -lodash 
lodash 패키지 정보확인 명령어


PS C:\Users\dw-008\Desktop\test> npm install lodash@4.17.20
특정버전 설치

^캐럿 기호를 지우는것은 이 버전으로 유지가 되게하겠다.
npm update lodash 명령어 가 안먹음.

버전관리를 따로 안하는 프로그램>
.dist 

*****************
npm install i 
(모듈 다시 설치 )
npm run build
다시 설치 가능하다.
*****************
모듈의 용량이 크기 때문에 버전관리 하는것이
오히려 비효율적 설치 간단.


vscode 
.gitignore 파일 생성
(git 업로드시 여기서 불필요한 파일 명시)

.cache/
dist/
node_modules/
한줄로 명시
폴더, 파일  버전관리 안할것 

>
git init
git status(붉은색) . 버젼관리 x

git add . 
git status(녹색) . 버젼관리 o
>
버젼만들기
git commit -m '프로젝트생성'

>
git log 로 확인

>

 git remote add origin 레포지토리 주소 추가





